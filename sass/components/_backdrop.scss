/* 
=====================================
=====================================

        BACKDROP CONTAINER

=====================================
=====================================
*/

/* HIDE BACKDROP CONTAINER 
=============================================*/
.is-hidden {
  pointer-events: none;
  /* show container from top to bottom */
  transform: translateY(-100%);
}

/* BACKDROP CONTAINER 
=============================================*/
.backdrop {
  position: fixed;
  display: flex;
  justify-content: center;
  align-items: center;
  
  top: 0;
  background: rgba(0, 0, 0, 0.2);
  @include box_size(100%, 100%);

  &__content {
    /* main container with form */
    display: flex;
    flex-wrap: wrap;
    flex-direction: column;
    padding: 40px;
    justify-content: center;
    align-items: center;
    gap: 12px;
  }
  &__title {
    /* text from form */
    @include text_value(20px, 1.15, $second-letter-spacing, 700);
    color: &fifth-color;
    text-align: center;
  }
  &__form {
    /* sizeing form and positioning all elements */
    display: flex;
    flex-direction: column;
    gap: 10px;
    width: 100%;
    align-items: center;
  }
}
/* CONTAINER WITH BUTTON AND FORM
=============================================*/
.modal {
  // position: absolute;
  // top: 50%;
  // left: 50%;
  // transform: translate(-50%, -50%);
  position: inherit;
  width: 450px;
  min-height: 609px;
  background-color: $first-color;
  box-shadow: 0px 1px 3px rgba(0, 0, 0, 0.12), 0px 1px 1px rgba(0, 0, 0, 0.14),
    0px 2px 1px rgba(0, 0, 0, 0.2);
  border-radius: $radius;
  transform: scale(1);
  @include anim__transition(transform, 0.5s);
}
/* scale 0 when is-hidden is active */
.is-hidden .modal {
  transform: scale(0);
  // animation: animate-back 1s;
}
/* FORM
=============================================*/
.form {
  width: 100%;
  position: relative;
  display: flex;
  flex-direction: column;
  gap: 4px;

  &__label {
    /* labels from its into form class */
    display: flex;
    flex-direction: column;
    justify-content: center;
  }

  &__title {
    /* text into form__label */
    // font-weight: $third-weight;

    @include text_value(
      $modal-text-size,
      $third-line-height,
      $modal-letter-spacing,
      $third-weight
    );
    color: $third-color;
  }

  &__input {
    /* size inputs from form */
    @include box_size(370px, 40px);
    outline: none;
    border-radius: $radius;
    @include anim__transition(border, 1px solid $input-color);

    &:hover,
    &:focus {
      /* change color when user hovered or focused input */
      @include anim__transition(border, 1px solid $second-color);
    }
    &:hover + .form__svg .form__icon,
    &:hover + .form__svg .form__icon {
      /* fill icon form from input */
      @include anim__transition(fill, $second-color);
    }
    &[type] {
      /* padding start to write text from user into input */
      padding-left: 42px;
    }
  }
  &__icon {
    /* animation icon color */
    @include anim__transition(fill, $fifth-color);
  }
  &__svg {
    /*
      form__svg with form__svg
      relocated icon to left and use margin to position 
    */
    position: absolute;
    margin-left: 15px;
  }
}

/* TEXTAREA INPUT AND BUTTON
=============================================*/
.textarea__input {
  @include box_size(370px, 120px);
  border: 1px solid $input-color;
  border-radius: $radius;
  padding: 12px;
  resize: none;
  &::placeholder {
    /* textarea__input placeholder */
    @include text_value(
      $modal-text-size,
      $third-line-height,
      $modal-letter-spacing,
      $third-weight
    );

    color: rgba(117, 117, 117, 0.5);
    user-select: none;
  }
}

/* CHECKBOX FROM REGULATIONS
=============================================*/
.checkbox {
  display: flex;
  text-align: center;
  align-items: center;
  justify-content: center;
  width: 100%;
  gap: 8px;
  padding: 10px 0 19px 0;
  &__input {
    /*
      checkbox input
      overflow is hidden becouse we use svg icon from icons.svg 
    */
    position: absolute;
    display: block;
    visibility: hidden;
  }
  &__svg {
    /* use margin and cursor to icon to svg checkbox */
    cursor: pointer;
  }

  &__before {
    /* VISIBILITY CHECKBOX ICONS
    =============================================*/
    /*
    visible checkbox icon from class checkbox__before 
    when user dosen't checked checkbox
   */
    visibility: visible;
  }
  &__input:checked + .label__checked &__svg &__before {
    /*
      hidden checkbox icon from class checkbox__before 
      when user checked checkbox
    */
    visibility: hidden;
  }
  &__after {
    /*
      hidden checkbox icon from class checkbox__after 
      when user dosen't checked checkbox
    */
    visibility: hidden;
  }
  &__input:checked + .label__checked &__svg &__after {
    /*
      visible checkbox icon from class checkbox__after 
      when user checked checkbox
    */
    visibility: visible;
  }

  &__regulations {
    /* REGULATIONS FROM CHECKBOX
    =============================================*/
    @include text_value(
      $modal-text-size,
      $third-line-height,
      $second-letter-spacing,
      $third-weight
    );
    /* identical to box height */
    color: $third-color;
    user-select: none;
    /* to emphasize "regulations" and "privacy policy" */
    .regulations__span {
      text-decoration: underline;
      color: $second-color;
      cursor: pointer;
    }
  }
}

/* if media resolution has 480px or smaller then modal, form and form__input has a calc */
@media screen and (max-width: 480px) {
  /* new width of modal*/
  .modal {
    width: calc(100vw - 30px);
    /* new width of form input */
    .form__input {
      width: calc(100%);
    }
  }
}
